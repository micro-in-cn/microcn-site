(window.webpackJsonp=window.webpackJsonp||[]).push([[197],{3191:function(s,n){s.exports={content:["article",["p","Micro 很容易在 docker 容器内运行"],["h2","预置镜像"],["p","我们在 Docker 镜像站",["a",{title:null,href:"https://hub.docker.com/r/microhq/"},"Docker Hub"]," 上提供了预置镜像"],["h3","获取 micro"],["pre",{lang:null,highlighted:'docker pull micro<span class="token operator">/</span>micro'},["code","docker pull micro/micro"]],["h2","Compose 配置"],["p","在本地通过 compose.yml 运行"],["pre",{lang:null,highlighted:'consul<span class="token punctuation">:</span>\n  command<span class="token punctuation">:</span> <span class="token operator">-</span>server <span class="token operator">-</span>bootstrap <span class="token operator">-</span>rejoin\n  image<span class="token punctuation">:</span> progrium<span class="token operator">/</span>consul<span class="token punctuation">:</span>latest\n  hostname<span class="token punctuation">:</span> <span class="token string">"registry"</span>\n  ports<span class="token punctuation">:</span>\n  <span class="token operator">-</span> <span class="token string">"8300:8300"</span>\n  <span class="token operator">-</span> <span class="token string">"8400:8400"</span>\n  <span class="token operator">-</span> <span class="token string">"8500:8500"</span>\n  <span class="token operator">-</span> <span class="token string">"8600:53/udp"</span>\napi<span class="token punctuation">:</span>\n  command<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token operator">-</span>registry_address<span class="token operator">=</span>registry<span class="token punctuation">:</span><span class="token number">8500</span> <span class="token operator">-</span><span class="token operator">-</span>register_interval<span class="token operator">=</span><span class="token number">5</span> <span class="token operator">-</span><span class="token operator">-</span>register_ttl<span class="token operator">=</span><span class="token number">10</span> api\n  build<span class="token punctuation">:</span> <span class="token punctuation">.</span>\n  links<span class="token punctuation">:</span>\n  <span class="token operator">-</span> consul\n  ports<span class="token punctuation">:</span>\n  <span class="token operator">-</span> <span class="token string">"8080:8080"</span>\nproxy<span class="token punctuation">:</span>\n  command<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token operator">-</span>registry_address<span class="token operator">=</span>registry<span class="token punctuation">:</span><span class="token number">8500</span> <span class="token operator">-</span><span class="token operator">-</span>register_interval<span class="token operator">=</span><span class="token number">5</span> <span class="token operator">-</span><span class="token operator">-</span>register_ttl<span class="token operator">=</span><span class="token number">10</span> proxy\n  build<span class="token punctuation">:</span> <span class="token punctuation">.</span>\n  links<span class="token punctuation">:</span>\n  <span class="token operator">-</span> consul\n  ports<span class="token punctuation">:</span>\n  <span class="token operator">-</span> <span class="token string">"8081:8081"</span>\nweb<span class="token punctuation">:</span>\n  command<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token operator">-</span>registry_address<span class="token operator">=</span>registry<span class="token punctuation">:</span><span class="token number">8500</span> <span class="token operator">-</span><span class="token operator">-</span>register_interval<span class="token operator">=</span><span class="token number">5</span> <span class="token operator">-</span><span class="token operator">-</span>register_ttl<span class="token operator">=</span><span class="token number">10</span> web\n  build<span class="token punctuation">:</span> <span class="token punctuation">.</span>\n  links<span class="token punctuation">:</span>\n  <span class="token operator">-</span> consul\n  ports<span class="token punctuation">:</span>\n  <span class="token operator">-</span> <span class="token string">"8082:8082"</span>'},["code",'consul:\n  command: -server -bootstrap -rejoin\n  image: progrium/consul:latest\n  hostname: "registry"\n  ports:\n  - "8300:8300"\n  - "8400:8400"\n  - "8500:8500"\n  - "8600:53/udp"\napi:\n  command: --registry_address=registry:8500 --register_interval=5 --register_ttl=10 api\n  build: .\n  links:\n  - consul\n  ports:\n  - "8080:8080"\nproxy:\n  command: --registry_address=registry:8500 --register_interval=5 --register_ttl=10 proxy\n  build: .\n  links:\n  - consul\n  ports:\n  - "8081:8081"\nweb:\n  command: --registry_address=registry:8500 --register_interval=5 --register_ttl=10 web\n  build: .\n  links:\n  - consul\n  ports:\n  - "8082:8082"']],["h2","从原始镜像开始构建"],["p","在",["a",{title:null,href:"https://github.com/micro/micro/blob/master/Dockerfile"},"micro"],"仓库中我们放有 Dockerfile 文件："],["pre",{lang:null,highlighted:'FROM alpine<span class="token punctuation">:</span><span class="token number">3.2</span>\nRUN apk add <span class="token operator">-</span><span class="token operator">-</span>update ca<span class="token operator">-</span>certificates <span class="token operator">&amp;</span><span class="token operator">&amp;</span> \\\n    rm <span class="token operator">-</span>rf <span class="token operator">/</span>var<span class="token operator">/</span>cache<span class="token operator">/</span>apk<span class="token operator">/</span><span class="token operator">*</span> <span class="token operator">/</span>tmp<span class="token operator">/</span><span class="token operator">*</span>\nADD micro <span class="token operator">/</span>micro\nWORKDIR <span class="token operator">/</span>\nENTRYPOINT <span class="token punctuation">[</span> <span class="token string">"/micro"</span> <span class="token punctuation">]</span>'},["code",'FROM alpine:3.2\nRUN apk add --update ca-certificates && \\\n    rm -rf /var/cache/apk/* /tmp/*\nADD micro /micro\nWORKDIR /\nENTRYPOINT [ "/micro" ]']],["h3","构建二进制文件"],["pre",{lang:null,highlighted:'CGO_ENABLED<span class="token operator">=</span><span class="token number">0</span> GOOS<span class="token operator">=</span>linux go build <span class="token operator">-</span>a <span class="token operator">-</span>installsuffix cgo <span class="token operator">-</span>ldflags <span class="token string">\'-w\'</span> <span class="token operator">-</span>i <span class="token operator">-</span>o micro <span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span>go'},["code","CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags '-w' -i -o micro ./main.go"]],["h3","构建镜像"],["pre",{lang:null,highlighted:'docker build <span class="token operator">-</span>t micro <span class="token punctuation">.</span>'},["code","docker build -t micro ."]]],meta:{order:8,title:"使用Docker发布",filename:"docs/stack-rpc/deploy-docker.zh-CN.md"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#预置镜像",title:"预置镜像"},"预置镜像"]],["li",["a",{className:"bisheng-toc-h2",href:"#Compose-配置",title:"Compose 配置"},"Compose 配置"]],["li",["a",{className:"bisheng-toc-h2",href:"#从原始镜像开始构建",title:"从原始镜像开始构建"},"从原始镜像开始构建"]]]}}}]);