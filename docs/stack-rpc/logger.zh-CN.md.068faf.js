(window.webpackJsonp=window.webpackJsonp||[]).push([[213],{3207:function(n,s){n.exports={content:["article",["p","Go-Micro 中的 Logger 组件定义了日志打印的接口"],["h2","设置级别"],["ul",["li",["p","环境变量"]],["li",["p","参数"]]],["h3","环境变量"],["p","可以通过环境变量",["strong","MICRO_LOG_LEVEL"],"定义日志级别："],["pre",{lang:"bash",highlighted:'MICRO_LOG_LEVEL<span class="token operator">=</span>debug go run main.go'},["code","MICRO_LOG_LEVEL=debug go run main.go"]],["h3","参数"],["p","logger 可以自行初始化日志时传入级别。"],["pre",{lang:"bash",highlighted:'<span class="token function">import</span> <span class="token punctuation">(</span>\n\t<span class="token string">"github.com/micro/go-micro/v2/logger"</span>\n<span class="token punctuation">)</span>\n\nfunc main<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    logger.Init<span class="token punctuation">(</span>logger.WithLevel<span class="token punctuation">(</span>logger.DebugLevel<span class="token punctuation">))</span>\n    // <span class="token punctuation">..</span>.\n<span class="token punctuation">}</span>'},["code",'import (\n\t"github.com/micro/go-micro/v2/logger"\n)\n\nfunc main() {\n    logger.Init(logger.WithLevel(logger.DebugLevel))\n    // ...\n}']],["h2","动态级别"],["p","有时候我们需要在运行时改变日志级别，此时我们可以调用",["strong","Init"],"方法覆盖原有配置"],["pre",{lang:"bash",highlighted:'<span class="token function">import</span> <span class="token punctuation">(</span>\n\t<span class="token string">"github.com/micro/go-micro/v2/logger"</span>\n<span class="token punctuation">)</span>\n\nfunc main<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\tlogger.Init<span class="token punctuation">(</span>logger.WithLevel<span class="token punctuation">(</span>logger.DebugLevel<span class="token punctuation">))</span>\n\n\tlogger.Debug<span class="token punctuation">(</span><span class="token string">"Debug"</span><span class="token punctuation">)</span>\n\tlogger.Debugf<span class="token punctuation">(</span><span class="token string">"Debug %s"</span>, <span class="token string">"Hello"</span><span class="token punctuation">)</span>\n\n\tlogger.Init<span class="token punctuation">(</span>logger.WithLevel<span class="token punctuation">(</span>logger.InfoLevel<span class="token punctuation">))</span>\n\tlogger.Debug<span class="token punctuation">(</span><span class="token string">"Debug2"</span><span class="token punctuation">)</span>\n\tlogger.Debugf<span class="token punctuation">(</span><span class="token string">"Debug2 %s"</span>, <span class="token string">"Hello"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>'},["code",'import (\n\t"github.com/micro/go-micro/v2/logger"\n)\n\nfunc main() {\n\tlogger.Init(logger.WithLevel(logger.DebugLevel))\n\n\tlogger.Debug("Debug")\n\tlogger.Debugf("Debug %s", "Hello")\n\n\tlogger.Init(logger.WithLevel(logger.InfoLevel))\n\tlogger.Debug("Debug2")\n\tlogger.Debugf("Debug2 %s", "Hello")\n}']],["p","此时，Debug2 不再被打印"],["h2","固有字段"],["p","我们在日志打印时，有时候需要在每次打印都把固有的信息打印出来，比如当前机器 IP 等等，此时可以通过 WithFields 声明在当前上下文中："],["ul",["li",["p","全局"]]],["pre",{lang:"go",highlighted:'<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\tlogger<span class="token punctuation">.</span><span class="token function">Init</span><span class="token punctuation">(</span>\n\t\tlogger<span class="token punctuation">.</span><span class="token function">WithLevel</span><span class="token punctuation">(</span>logger<span class="token punctuation">.</span>DebugLevel<span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t\tlogger<span class="token punctuation">.</span><span class="token function">WithFields</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>\n\t\t\t<span class="token string">"header1"</span><span class="token punctuation">:</span> <span class="token string">"头1"</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">"header2"</span><span class="token punctuation">:</span> <span class="token string">"头2"</span><span class="token punctuation">,</span>\n\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">)</span>\n\n\tlogger<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token string">"Debug"</span><span class="token punctuation">)</span>\n\tlogger<span class="token punctuation">.</span><span class="token function">Debugf</span><span class="token punctuation">(</span><span class="token string">"Debug %s"</span><span class="token punctuation">,</span> <span class="token string">"Hello"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>'},["code",'func main() {\n\tlogger.Init(\n\t\tlogger.WithLevel(logger.DebugLevel),\n\t\tlogger.WithFields(map[string]interface{}{\n\t\t\t"header1": "头1",\n\t\t\t"header2": "头2",\n\t\t}),\n\t)\n\n\tlogger.Debug("Debug")\n\tlogger.Debugf("Debug %s", "Hello")\n}']],["h2","插件"],["p","Go-Micro 提供了常见的日志库集成实现"],["ul",["li",["p",["a",{title:null,href:"https://github.com/micro/go-plugins/tree/master/logger/zap"},"zap"]]],["li",["p",["a",{title:null,href:"https://github.com/micro/go-plugins/tree/master/logger/logrus"},"logrus"]]],["li",["p",["a",{title:null,href:"https://github.com/micro/go-plugins/tree/master/logger/zerolog"},"zerolog"]]],["li",["p",["a",{title:null,href:"https://github.com/micro/go-plugins/tree/master/logger/apex"},"apex"]]]],["h2","替换默认实现"],["p","下面的示例演示了如何使用",["a",{title:null,href:"https://github.com/micro/go-plugins/tree/master/logger/logrus"},"logrus"],"来覆盖默认的实现："],["pre",{lang:"go",highlighted:'<span class="token keyword">package</span> main\n\n<span class="token keyword">import</span> <span class="token punctuation">(</span>\n\t<span class="token string">"os"</span>\n\n\t<span class="token string">"github.com/micro/go-micro/v2/logger"</span>\n\tlr <span class="token string">"github.com/micro/go-plugins/logger/logrus/v2"</span>\n<span class="token punctuation">)</span>\n\n<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\tl <span class="token operator">:=</span> lr<span class="token punctuation">.</span><span class="token function">NewLogger</span><span class="token punctuation">(</span>\n\t\tlogger<span class="token punctuation">.</span><span class="token function">WithOutput</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdout<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Fields</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>\n\t\t<span class="token string">"header1"</span><span class="token punctuation">:</span> <span class="token string">"头1"</span><span class="token punctuation">,</span>\n\t\t<span class="token string">"header2"</span><span class="token punctuation">:</span> <span class="token number">8080</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n\tlogger<span class="token punctuation">.</span>DefaultLogger <span class="token operator">=</span> l\n\n\tlogger<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">"testing: Info"</span><span class="token punctuation">)</span>\n\tlogger<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">"testing: %s"</span><span class="token punctuation">,</span> <span class="token string">"Infof"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>'},["code",'package main\n\nimport (\n\t"os"\n\n\t"github.com/micro/go-micro/v2/logger"\n\tlr "github.com/micro/go-plugins/logger/logrus/v2"\n)\n\nfunc main() {\n\tl := lr.NewLogger(\n\t\tlogger.WithOutput(os.Stdout)).Fields(map[string]interface{}{\n\t\t"header1": "头1",\n\t\t"header2": 8080,\n\t})\n\n\tlogger.DefaultLogger = l\n\n\tlogger.Info("testing: Info")\n\tlogger.Infof("testing: %s", "Infof")\n}']]],meta:{order:34,title:"Logger",filename:"docs/stack-rpc/logger.zh-CN.md"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#设置级别",title:"设置级别"},"设置级别"]],["li",["a",{className:"bisheng-toc-h2",href:"#动态级别",title:"动态级别"},"动态级别"]],["li",["a",{className:"bisheng-toc-h2",href:"#固有字段",title:"固有字段"},"固有字段"]],["li",["a",{className:"bisheng-toc-h2",href:"#插件",title:"插件"},"插件"]],["li",["a",{className:"bisheng-toc-h2",href:"#替换默认实现",title:"替换默认实现"},"替换默认实现"]]]}}}]);