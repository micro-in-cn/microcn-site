(window.webpackJsonp=window.webpackJsonp||[]).push([[221],{3215:function(n,s){n.exports={content:["article",["h1","micro proxy"],["p",["strong","micro proxy"]," 其实就是服务与服务之间如果不方便直接调用时，就可能通过 proxy 服务来调用另一方的接口。"],["p",["img",{src:"../images/proxy.svg"}]],["h2","概览"],["p","Micro proxy 提供基于 go-micro 框架的代理服务。它把 go-micro 中的各种特性组成一个本地化的服务，并且支持把需要的特性转到其上，比如服务发现、负载均衡、容错、插件化、包装器等等。我们并不需要给把每个 go-micro 服务都升级以满足底层框架所要求的种种东西，只需要通过代理即可，而其它语言就只用实现很轻的客户端而不用实现所有特性就能调用服务。"],["h2","使用方法"],["h3","安装"],["pre",{lang:"shell",highlighted:'go get <span class="token operator">-</span>u github<span class="token punctuation">.</span>com<span class="token operator">/</span>micro<span class="token operator">/</span>micro'},["code","go get -u github.com/micro/micro"]],["h3","依赖"],["p","代理基于 go-micro 开发，也就是说它是依赖服务发现的。"],["p","安装 Consul"],["pre",{lang:null,highlighted:'brew install consul\nconsul agent <span class="token operator">-</span>dev'},["code","brew install consul\nconsul agent -dev"]],["h3","运行"],["p","Micro 代理默认是运行在 8081 端口下。"],["p","启动代理："],["pre",{lang:"shell",highlighted:"micro proxy"},["code","micro proxy"]],["h3","ACME"],["p","服务默认使用 ACME 安全协议"],["pre",{lang:null,highlighted:'MICRO_ENABLE_ACME<span class="token operator">=</span><span class="token boolean">true</span> micro proxy'},["code","MICRO_ENABLE_ACME=true micro proxy"]],["p","可以选择性配置主机白名单"],["pre",{lang:null,highlighted:'MICRO_ENABLE_ACME<span class="token operator">=</span><span class="token boolean">true</span> MICRO_ACME_HOSTS<span class="token operator">=</span>example<span class="token punctuation">.</span>com<span class="token punctuation">,</span>api<span class="token punctuation">.</span>example<span class="token punctuation">.</span>com micro proxy'},["code","MICRO_ENABLE_ACME=true MICRO_ACME_HOSTS=example.com,api.example.com micro proxy"]],["h2","Proxy CLI"],["p","命令行如果要指定代理，可以像下面这样设置："],["pre",{lang:"shell",highlighted:'MICRO_PROXY_ADDRESS<span class="token operator">=</span><span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">8081</span> micro list services'},["code","MICRO_PROXY_ADDRESS=127.0.0.1:8081 micro list services"]],["pre",{lang:null,highlighted:'MICRO_PROXY_ADDRESS<span class="token operator">=</span><span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">8081</span> micro call greeter Say<span class="token punctuation">.</span>Hello <span class="token string">\'{"name": "john"}\'</span>'},["code",'MICRO_PROXY_ADDRESS=127.0.0.1:8081 micro call greeter Say.Hello \'{"name": "john"}\'']]],meta:{order:38,title:"Proxy",filename:"docs/stack-rpc/proxy.zh-CN.md"},toc:["ul",["li",["a",{className:"bisheng-toc-h1",href:"#micro-proxy",title:"micro proxy"},"micro proxy"]],["li",["a",{className:"bisheng-toc-h2",href:"#概览",title:"概览"},"概览"]],["li",["a",{className:"bisheng-toc-h2",href:"#使用方法",title:"使用方法"},"使用方法"]],["li",["a",{className:"bisheng-toc-h2",href:"#Proxy-CLI",title:"Proxy CLI"},"Proxy CLI"]]]}}}]);