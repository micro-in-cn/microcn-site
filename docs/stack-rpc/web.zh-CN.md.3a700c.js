(window.webpackJsonp=window.webpackJsonp||[]).push([[217],{3211:function(n,s){n.exports={content:["article",["p","Stack 支持编写Web服务，方便开发人员暴露HTTP接口"],["h2","编写服务"],["p","Stack中启动Web服务与RPC服务一样简单，大致如下："],["pre",{lang:"go",highlighted:'<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\ts <span class="token operator">:=</span> stack<span class="token punctuation">.</span><span class="token function">NewWebService</span><span class="token punctuation">(</span>\n        <span class="token comment" spellcheck="true">// 服务名</span>\n\t\tstack<span class="token punctuation">.</span><span class="token function">Name</span><span class="token punctuation">(</span><span class="token string">"stack.rpc.web"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t\t<span class="token comment" spellcheck="true">// 地址与端口</span>\n\t\tstack<span class="token punctuation">.</span><span class="token function">Address</span><span class="token punctuation">(</span><span class="token string">":8080"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t\t<span class="token comment" spellcheck="true">// 根目录</span>\n\t\tstack<span class="token punctuation">.</span><span class="token function">WebRootPath</span><span class="token punctuation">(</span><span class="token string">"web-demo"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t\t<span class="token comment" spellcheck="true">// 路由与Handler</span>\n\t\tstack<span class="token punctuation">.</span><span class="token function">WebHandleFuncs</span><span class="token punctuation">(</span>\n\t\t\tweb<span class="token punctuation">.</span>HandlerFunc<span class="token punctuation">{</span>\n\t\t\t\tRoute<span class="token punctuation">:</span> <span class="token string">"hello"</span><span class="token punctuation">,</span>\n\t\t\t\tFunc<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t\t\tw<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">`hello world`</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\t\t\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t<span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t\t<span class="token comment" spellcheck="true">// 静态目录</span>\n\t\tstack<span class="token punctuation">.</span><span class="token function">WebStaticDir</span><span class="token punctuation">(</span><span class="token string">"webapp"</span><span class="token punctuation">,</span> <span class="token string">"static"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">)</span>\n\ts<span class="token punctuation">.</span><span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    s<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>'},["code",'func main() {\n\ts := stack.NewWebService(\n        // 服务名\n\t\tstack.Name("stack.rpc.web"),\n\t\t// 地址与端口\n\t\tstack.Address(":8080"),\n\t\t// 根目录\n\t\tstack.WebRootPath("web-demo"),\n\t\t// 路由与Handler\n\t\tstack.WebHandleFuncs(\n\t\t\tweb.HandlerFunc{\n\t\t\t\tRoute: "hello",\n\t\t\t\tFunc: func(w http.ResponseWriter, r *http.Request) {\n\t\t\t\t\tw.Write([]byte(`hello world`))\n\t\t\t\t},\n\t\t\t},\n\t\t),\n\t\t// 静态目录\n\t\tstack.WebStaticDir("webapp", "static"),\n\t)\n\ts.Init()\n    s.Run()\n}']],["p","上面的代码中我们启动了一个简单的HTTP服务，并声明了一个Hello接口与静态目录。"],["p","如果嫌代码冗长，也可以把关键配置放到配置文件（或配置中心中）："],["pre",{lang:"yaml",highlighted:'<span class="token key atrule">stack</span><span class="token punctuation">:</span>\n  <span class="token key atrule">service</span><span class="token punctuation">:</span>\n    <span class="token key atrule">name</span><span class="token punctuation">:</span> stack.rpc.web\n    <span class="token key atrule">web</span><span class="token punctuation">:</span>\n      <span class="token key atrule">root-path</span><span class="token punctuation">:</span> web<span class="token punctuation">-</span>demo\n      <span class="token key atrule">static</span><span class="token punctuation">:</span>\n        <span class="token key atrule">route</span><span class="token punctuation">:</span> webapp\n        <span class="token key atrule">dir</span><span class="token punctuation">:</span> static\n  <span class="token key atrule">server</span><span class="token punctuation">:</span>\n    <span class="token key atrule">address</span><span class="token punctuation">:</span> <span class="token punctuation">:</span><span class="token number">8090</span>'},["code","stack:\n  service:\n    name: stack.rpc.web\n    web:\n      root-path: web-demo\n      static:\n        route: webapp\n        dir: static\n  server:\n    address: :8090"]],["p","通过该配置，启动代码可省略为："],["pre",{lang:"go",highlighted:'<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    s <span class="token operator">:=</span> stack<span class="token punctuation">.</span><span class="token function">NewWebService</span><span class="token punctuation">(</span>\n\t\t<span class="token comment" spellcheck="true">// 路由与Handler</span>\n\t\tstack<span class="token punctuation">.</span><span class="token function">WebHandleFuncs</span><span class="token punctuation">(</span>\n\t\t\tweb<span class="token punctuation">.</span>HandlerFunc<span class="token punctuation">{</span>\n\t\t\t\tRoute<span class="token punctuation">:</span> <span class="token string">"hello"</span><span class="token punctuation">,</span>\n\t\t\t\tFunc<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t\t\tw<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">`hello world`</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\t\t\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t<span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">)</span>\n\ts<span class="token punctuation">.</span><span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    s<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>'},["code",'func main(){\n    s := stack.NewWebService(\n\t\t// 路由与Handler\n\t\tstack.WebHandleFuncs(\n\t\t\tweb.HandlerFunc{\n\t\t\t\tRoute: "hello",\n\t\t\t\tFunc: func(w http.ResponseWriter, r *http.Request) {\n\t\t\t\t\tw.Write([]byte(`hello world`))\n\t\t\t\t},\n\t\t\t},\n\t\t),\n\t)\n\ts.Init()\n    s.Run()\n}']],["p","完整代码参考：",["a",{title:null,href:"https://github.com/stack-labs/stack-rpc-tutorials/tree/master/examples/service/web"},"Web"]],["h3","未完待续"]],meta:{order:13,title:"Web服务",filename:"docs/stack-rpc/web.zh-CN.md"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#编写服务",title:"编写服务"},"编写服务"]]]}}}]);