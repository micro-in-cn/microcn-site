(window.webpackJsonp=window.webpackJsonp||[]).push([[200],{3194:function(n,s){n.exports={content:["article",["p","Micro 在 Kubernetes 中是原生 kubernetes 的微服务。"],["p","Micro 是一个微服务工具包，而 Kubernetes 是一个容器调度平台，它们组合在一起便构成微服务基础设施。"],["h2","特性"],["ul",["li",["p","无外部依赖"]],["li",["p","客户端缓存服务发现"]],["li",["p","可选 k8s 服务负载均衡"]],["li",["p","使用 gRPC 传输协议"]],["li",["p","预置工具包"]]],["h2","安装 Micro"],["pre",{lang:null,highlighted:'go get github<span class="token punctuation">.</span>com<span class="token operator">/</span>micro<span class="token operator">/</span>kubernetes<span class="token operator">/</span>cmd<span class="token operator">/</span>micro'},["code","go get github.com/micro/kubernetes/cmd/micro"]],["p","或者"],["pre",{lang:null,highlighted:'docker pull micro<span class="token operator">/</span>micro<span class="token punctuation">:</span>kubernetes'},["code","docker pull micro/micro:kubernetes"]],["p","如果使用 go-micro，可以导入："],["pre",{lang:null,highlighted:'import <span class="token string">"github.com/micro/kubernetes/go/micro"</span>'},["code",'import "github.com/micro/kubernetes/go/micro"']],["h2","编写服务"],["p","在",["a",{title:null,href:"https://github.com/micro/go-micro"},"go-micro"],"中可以使用其它服务一样集成 k8s。"],["pre",{lang:"go",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">(</span>\n\t<span class="token string">"github.com/micro/go-micro/v2"</span>\n\tk8s <span class="token string">"github.com/micro/kubernetes/go/micro"</span>\n<span class="token punctuation">)</span>\n\n<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\tservice <span class="token operator">:=</span> k8s<span class="token punctuation">.</span><span class="token function">NewService</span><span class="token punctuation">(</span>\n\t\tmicro<span class="token punctuation">.</span><span class="token function">Name</span><span class="token punctuation">(</span><span class="token string">"greeter"</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">)</span>\n\tservice<span class="token punctuation">.</span><span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\tservice<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>'},["code",'import (\n\t"github.com/micro/go-micro/v2"\n\tk8s "github.com/micro/kubernetes/go/micro"\n)\n\nfunc main() {\n\tservice := k8s.NewService(\n\t\tmicro.Name("greeter")\n\t)\n\tservice.Init()\n\tservice.Run()\n}']],["h2","部署服务"],["p","以下是 k8s 部署微服务的示例"],["pre",{lang:null,highlighted:'apiVersion<span class="token punctuation">:</span> extensions<span class="token operator">/</span>v1beta1\nkind<span class="token punctuation">:</span> Deployment\nmetadata<span class="token punctuation">:</span>\n  namespace<span class="token punctuation">:</span> <span class="token keyword">default</span>\n  name<span class="token punctuation">:</span> greeter\nspec<span class="token punctuation">:</span>\n  replicas<span class="token punctuation">:</span> <span class="token number">1</span>\n  template<span class="token punctuation">:</span>\n    metadata<span class="token punctuation">:</span>\n      labels<span class="token punctuation">:</span>\n        app<span class="token punctuation">:</span> greeter<span class="token operator">-</span>srv\n    spec<span class="token punctuation">:</span>\n      containers<span class="token punctuation">:</span>\n        <span class="token operator">-</span> name<span class="token punctuation">:</span> greeter\n          command<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n\t\t<span class="token string">"/greeter-srv"</span><span class="token punctuation">,</span>\n\t\t<span class="token string">"--server_address=0.0.0.0:8080"</span><span class="token punctuation">,</span>\n\t\t<span class="token string">"--broker_address=0.0.0.0:10001"</span>\n\t  <span class="token punctuation">]</span>\n          image<span class="token punctuation">:</span> microhq<span class="token operator">/</span>greeter<span class="token operator">-</span>srv<span class="token punctuation">:</span>kubernetes\n          imagePullPolicy<span class="token punctuation">:</span> Always\n          ports<span class="token punctuation">:</span>\n          <span class="token operator">-</span> containerPort<span class="token punctuation">:</span> <span class="token number">8080</span>\n            name<span class="token punctuation">:</span> greeter<span class="token operator">-</span>port'},["code",'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  namespace: default\n  name: greeter\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: greeter-srv\n    spec:\n      containers:\n        - name: greeter\n          command: [\n\t\t"/greeter-srv",\n\t\t"--server_address=0.0.0.0:8080",\n\t\t"--broker_address=0.0.0.0:10001"\n\t  ]\n          image: microhq/greeter-srv:kubernetes\n          imagePullPolicy: Always\n          ports:\n          - containerPort: 8080\n            name: greeter-port']],["p","通过 kubectl 部署"],["pre",{lang:null,highlighted:'kubectl create <span class="token operator">-</span>f greeter<span class="token punctuation">.</span>yaml'},["code","kubectl create -f greeter.yaml"]],["h2","健康检查器"],["p","健康检查器（healthchecking sidecar，参考 sidecar 模式）会调用服务 rpc 接口",["code","Debug.Health"],"向外暴露",["code","/health"],"端点，而每个 go-micro 服务都有一个内置的 Debug.Health 端点。"],["h3","部署健康检查"],["pre",{lang:null,highlighted:'go get github<span class="token punctuation">.</span>com<span class="token operator">/</span>micro<span class="token operator">/</span>kubernetes<span class="token operator">/</span>cmd<span class="token operator">/</span>health'},["code","go get github.com/micro/kubernetes/cmd/health"]],["p","或者"],["pre",{lang:null,highlighted:'docker pull microhq<span class="token operator">/</span>health<span class="token punctuation">:</span>kubernetes'},["code","docker pull microhq/health:kubernetes"]],["h3","运行健康检查"],["p","例如，运行 healthcheck greeter 服务，地址为 localhost：9091"],["pre",{lang:null,highlighted:'health <span class="token operator">-</span><span class="token operator">-</span>server_name<span class="token operator">=</span>greeter <span class="token operator">-</span><span class="token operator">-</span>server_address<span class="token operator">=</span>localhost<span class="token punctuation">:</span><span class="token number">9091</span>'},["code","health --server_name=greeter --server_address=localhost:9091"]],["p","在 localhost:8080 调用 healthchecker"],["pre",{lang:null,highlighted:'curl http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token punctuation">:</span><span class="token number">8080</span><span class="token operator">/</span>health'},["code","curl http://localhost:8080/health"]],["h3","K8s 部署"],["p","添加 kubernetes 部署配置"],["pre",{lang:null,highlighted:'apiVersion<span class="token punctuation">:</span> extensions<span class="token operator">/</span>v1beta1\nkind<span class="token punctuation">:</span> Deployment\nmetadata<span class="token punctuation">:</span>\n  namespace<span class="token punctuation">:</span> <span class="token keyword">default</span>\n  name<span class="token punctuation">:</span> greeter\nspec<span class="token punctuation">:</span>\n  replicas<span class="token punctuation">:</span> <span class="token number">1</span>\n  template<span class="token punctuation">:</span>\n    metadata<span class="token punctuation">:</span>\n      labels<span class="token punctuation">:</span>\n        app<span class="token punctuation">:</span> greeter<span class="token operator">-</span>srv\n    spec<span class="token punctuation">:</span>\n      containers<span class="token punctuation">:</span>\n        <span class="token operator">-</span> name<span class="token punctuation">:</span> greeter\n          command<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n\t\t<span class="token string">"/greeter-srv"</span><span class="token punctuation">,</span>\n\t\t<span class="token string">"--server_address=0.0.0.0:8080"</span><span class="token punctuation">,</span>\n\t\t<span class="token string">"--broker_address=0.0.0.0:10001"</span>\n\t  <span class="token punctuation">]</span>\n          image<span class="token punctuation">:</span> microhq<span class="token operator">/</span>greeter<span class="token operator">-</span>srv<span class="token punctuation">:</span>kubernetes\n          imagePullPolicy<span class="token punctuation">:</span> Always\n          ports<span class="token punctuation">:</span>\n          <span class="token operator">-</span> containerPort<span class="token punctuation">:</span> <span class="token number">8080</span>\n            name<span class="token punctuation">:</span> greeter<span class="token operator">-</span>port\n        <span class="token operator">-</span> name<span class="token punctuation">:</span> health\n          command<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n\t\t<span class="token string">"/health"</span><span class="token punctuation">,</span>\n                <span class="token string">"--health_address=0.0.0.0:8081"</span><span class="token punctuation">,</span>\n\t\t<span class="token string">"--server_name=greeter"</span><span class="token punctuation">,</span>\n\t\t<span class="token string">"--server_address=0.0.0.0:8080"</span>\n\t  <span class="token punctuation">]</span>\n          image<span class="token punctuation">:</span> microhq<span class="token operator">/</span>health<span class="token punctuation">:</span>kubernetes\n          livenessProbe<span class="token punctuation">:</span>\n            httpGet<span class="token punctuation">:</span>\n              path<span class="token punctuation">:</span> <span class="token operator">/</span>health\n              port<span class="token punctuation">:</span> <span class="token number">8081</span>\n            initialDelaySeconds<span class="token punctuation">:</span> <span class="token number">3</span>\n            periodSeconds<span class="token punctuation">:</span> <span class="token number">3</span>'},["code",'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  namespace: default\n  name: greeter\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: greeter-srv\n    spec:\n      containers:\n        - name: greeter\n          command: [\n\t\t"/greeter-srv",\n\t\t"--server_address=0.0.0.0:8080",\n\t\t"--broker_address=0.0.0.0:10001"\n\t  ]\n          image: microhq/greeter-srv:kubernetes\n          imagePullPolicy: Always\n          ports:\n          - containerPort: 8080\n            name: greeter-port\n        - name: health\n          command: [\n\t\t"/health",\n                "--health_address=0.0.0.0:8081",\n\t\t"--server_name=greeter",\n\t\t"--server_address=0.0.0.0:8080"\n\t  ]\n          image: microhq/health:kubernetes\n          livenessProbe:\n            httpGet:\n              path: /health\n              port: 8081\n            initialDelaySeconds: 3\n            periodSeconds: 3']],["h2","K8s 负载均衡"],["p","Micro 默认提供客户端负载均衡，但 k8s 也提供有服务负载均衡策略。"],["p","要把默认的均衡卸掉迁移到 k8s，可以使用",["a",{title:null,href:"https://github.com/micro/go-plugins/tree/master/selector/static"},"静态选择器"],"与 k8s 服务协同的方式。"],["p","不同于地址解析，选择器返回服务名与既定端口，例如 greeter 服务抬 greeter:8080。"],["p","点击了解更多关于",["a",{title:null,href:"https://github.com/micro/go-plugins/tree/master/selector/static"},"静态选择器"],"。"],["h3","用法"],["p","要在运行服务时使用静态选择器，请指定参数或环境变量"],["pre",{lang:null,highlighted:'MICRO_SELECTOR<span class="token operator">=</span><span class="token keyword">static</span> <span class="token punctuation">.</span><span class="token operator">/</span>service'},["code","MICRO_SELECTOR=static ./service"]],["p","或者"],["pre",{lang:null,highlighted:'<span class="token punctuation">.</span><span class="token operator">/</span>service <span class="token operator">-</span><span class="token operator">-</span>selector<span class="token operator">=</span><span class="token keyword">static</span>'},["code","./service --selector=static"]],["h3","K8s 部署"],["p","部署示例"],["pre",{lang:null,highlighted:'apiVersion<span class="token punctuation">:</span> extensions<span class="token operator">/</span>v1beta1\nkind<span class="token punctuation">:</span> Deployment\nmetadata<span class="token punctuation">:</span>\n  namespace<span class="token punctuation">:</span> <span class="token keyword">default</span>\n  name<span class="token punctuation">:</span> greeter\nspec<span class="token punctuation">:</span>\n  replicas<span class="token punctuation">:</span> <span class="token number">1</span>\n  template<span class="token punctuation">:</span>\n    metadata<span class="token punctuation">:</span>\n      labels<span class="token punctuation">:</span>\n        app<span class="token punctuation">:</span> greeter<span class="token operator">-</span>srv\n    spec<span class="token punctuation">:</span>\n      containers<span class="token punctuation">:</span>\n        <span class="token operator">-</span> name<span class="token punctuation">:</span> greeter\n          command<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n\t\t<span class="token string">"/greeter-srv"</span><span class="token punctuation">,</span>\n\t\t<span class="token string">"--selector=static"</span><span class="token punctuation">,</span>\n\t\t<span class="token string">"--server_address=0.0.0.0:8080"</span><span class="token punctuation">,</span>\n\t\t<span class="token string">"--broker_address=0.0.0.0:10001"</span>\n\t  <span class="token punctuation">]</span>\n          image<span class="token punctuation">:</span> microhq<span class="token operator">/</span>greeter<span class="token operator">-</span>srv<span class="token punctuation">:</span>kubernetes\n          imagePullPolicy<span class="token punctuation">:</span> Always\n          ports<span class="token punctuation">:</span>\n          <span class="token operator">-</span> containerPort<span class="token punctuation">:</span> <span class="token number">8080</span>\n            name<span class="token punctuation">:</span> greeter<span class="token operator">-</span>port'},["code",'apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  namespace: default\n  name: greeter\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: greeter-srv\n    spec:\n      containers:\n        - name: greeter\n          command: [\n\t\t"/greeter-srv",\n\t\t"--selector=static",\n\t\t"--server_address=0.0.0.0:8080",\n\t\t"--broker_address=0.0.0.0:10001"\n\t  ]\n          image: microhq/greeter-srv:kubernetes\n          imagePullPolicy: Always\n          ports:\n          - containerPort: 8080\n            name: greeter-port']],["h3","K8s 服务"],["p","静态选择器将负载均衡迁移到 k8s 服务。因此，请确保为每个微服务创建了 k8s 服务。"],["p","服务样例"],["pre",{lang:null,highlighted:'apiVersion<span class="token punctuation">:</span> v1\nkind<span class="token punctuation">:</span> Service\nmetadata<span class="token punctuation">:</span>\n  name<span class="token punctuation">:</span> greeter\n  labels<span class="token punctuation">:</span>\n    app<span class="token punctuation">:</span> greeter\nspec<span class="token punctuation">:</span>\n  ports<span class="token punctuation">:</span>\n  <span class="token operator">-</span> port<span class="token punctuation">:</span> <span class="token number">8080</span>\n    protocol<span class="token punctuation">:</span> TCP\n  selector<span class="token punctuation">:</span>\n    app<span class="token punctuation">:</span> greeter'},["code","apiVersion: v1\nkind: Service\nmetadata:\n  name: greeter\n  labels:\n    app: greeter\nspec:\n  ports:\n  - port: 8080\n    protocol: TCP\n  selector:\n    app: greeter"]],["p","通过 kubectl 部署"],["pre",{lang:null,highlighted:'kubectl create <span class="token operator">-</span>f service<span class="token punctuation">.</span>yaml'},["code","kubectl create -f service.yaml"]],["p","这样，在你的服务中调用 greeter 微服务，会被路由到 k8s 服务中的 greeter 服务 8080 端口上。"]],meta:{order:9,title:"kubernetes",filename:"docs/stack/deploy-kubernetes.zh-CN.md"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#特性",title:"特性"},"特性"]],["li",["a",{className:"bisheng-toc-h2",href:"#安装-Micro",title:"安装 Micro"},"安装 Micro"]],["li",["a",{className:"bisheng-toc-h2",href:"#编写服务",title:"编写服务"},"编写服务"]],["li",["a",{className:"bisheng-toc-h2",href:"#部署服务",title:"部署服务"},"部署服务"]],["li",["a",{className:"bisheng-toc-h2",href:"#健康检查器",title:"健康检查器"},"健康检查器"]],["li",["a",{className:"bisheng-toc-h2",href:"#K8s-负载均衡",title:"K8s 负载均衡"},"K8s 负载均衡"]]]}}}]);